@page "/"
@using HelloWorldBlazor.Interfaces
@using HelloWorldBlazor.Classes

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@* <button> will intrisically call StateHasChanged() *@
<button @onclick="(() => _currentSelectedPerson = null)">New Person</button>

<PersonForm AddPersonEventCallback="AddPersonOnClickEventCallback"
            Person="_currentSelectedPerson"/>

<button @onclick="DeletePersonOnClick">
    Delete @(_currentSelectedPerson?.DisplayName ?? "no selection")
</button>

@foreach(IPerson person in PersonRepository.GetPeople())
{
   <PersonRenderer Person="person"
                   OnClickPersonEventCallback="SetCurrentSelectionOnClick"/>
}

Update @(_currentSelectedPerson?.DisplayName ?? "no selection")

 <div style="max-width: 400px;">
     <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <MudCard>
            <MudCardContent>
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField @bind-Value="model.UpdatedFirstName" T="string" Label="First Name" Required="true" RequiredError="First name is required!"/>
                    <MudTextField @bind-Value="model.UpdatedLastName" T="string" Label="Last Name" Required="true" RequiredError="Last name is required!"/>
                </MudForm>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Update</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
</div>